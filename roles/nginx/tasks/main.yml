---

- name: Install nginx and letsencrypt
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - nginx
    - letsencrypt

- name: Create default nginx server configuration file
  template:
    src: nginx_default.j2
    dest: /etc/nginx/sites-available/default.conf
  with_items:
    - "{{ nginx_default_server }}"
  when: nginx_default_server is defined

- name: Create all nginx server configuration files
  template:
    src: nginx.j2
    dest: /etc/nginx/sites-available/{{ item.nginx_conf_name }}.conf
    owner: root
    group: root
    mode: "u=rwx,go=rx"
  with_items:
    - "{{ nginx_servers }}"
  when: nginx_servers is defined

- name: Create all nginx server configuration files
  template:
    src: nginx_websockets.j2
    dest: /etc/nginx/sites-available/{{ item.nginx_conf_name }}.conf
    owner: root
    group: root
    mode: "u=rwx,go=rx"
  with_items:
    - "{{ nginx_servers_with_websockets }}"
  when: nginx_servers_with_websockets is defined

- name: Link default conf file to sites-enabled
  file:
    src: "/etc/nginx/sites-available/default.conf"
    dest: "/etc/nginx/sites-enabled/default.conf"
    state: link
  when: nginx_default_server is defined

- name: Link all sites-available configs to sites-enabled
  file:
    src: "/etc/nginx/sites-available/{{ item.nginx_conf_name }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ item.nginx_conf_name }}.conf"
    state: link
  with_items:
    - "{{ nginx_servers }}"
  when: nginx_servers is defined
  notify:
    Restart nginx

- name: Link all sites-available configs to sites-enabled
  file:
    src: "/etc/nginx/sites-available/{{ item.nginx_conf_name }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ item.nginx_conf_name }}.conf"
    state: link
  with_items:
    - "{{ nginx_servers_with_websockets }}"
  when: nginx_servers_with_websockets is defined
  notify:
    Restart nginx
